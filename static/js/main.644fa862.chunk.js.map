{"version":3,"sources":["components/Form.js","components/Result.js","components/App.js","index.js"],"names":["Form","props","type","value","onChange","change","placeholder","Result","weather","day","time","city","sunrise","sunset","temp","pressure","wind","error","content","sunriseTime","Date","toLocaleTimeString","sunsetTime","className","App","state","handleInputChange","e","setState","target","prevProps","prevState","this","length","API","fetch","then","response","ok","Error","json","data","toLocaleDateString","sys","main","speed","catch","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mRAgBeA,G,YAbF,SAACC,GACV,OACI,+BACI,uBACIC,KAAK,OACLC,MAAOF,EAAME,MACbC,SAAUH,EAAMI,OAChBC,YAAY,qBCuBbC,G,MA9BA,SAACN,GAAW,IAAD,EAEkDA,EAAMO,QAAvEC,EAFe,EAEfA,IAAKC,EAFU,EAEVA,KAAMC,EAFI,EAEJA,KAAMC,EAFF,EAEEA,QAASC,EAFX,EAEWA,OAAQC,EAFnB,EAEmBA,KAAMC,EAFzB,EAEyBA,SAAUC,EAFnC,EAEmCA,KAAMC,EAFzC,EAEyCA,MAE3DC,EAAU,KAEd,IAAID,GAASN,EAAM,CACf,IAAMQ,EAAc,IAAIC,KAAe,IAAVR,GAAgBS,qBACvCC,EAAa,IAAIF,KAAc,IAATP,GAAeQ,qBAC3CH,EACI,gCACI,2DAA6B,6BAAKP,OAClC,8CAAYF,KACZ,2CAAcC,KACd,+CAAkBI,EAAlB,WACA,gEAAsBK,KACtB,gEAAsBG,KACtB,oDAAkBN,EAAlB,SACA,kDAAgBD,EAAhB,YAKZ,OACI,qBAAKQ,UAAU,SAAf,SACKN,EAAK,2BAAuBN,GAASO,MCmDnCM,E,4MAtEbC,MAAQ,CACNtB,MAAO,GACPM,IAAK,GACLC,KAAM,GACNC,KAAM,GACNC,QAAS,GACTC,OAAQ,GACRC,KAAM,GACNC,SAAU,GACVC,KAAM,GACNC,OAAO,G,EAGTS,kBAAoB,SAACC,GACnB,EAAKC,SAAS,CACZzB,MAAOwB,EAAEE,OAAO1B,S,iEAID2B,EAAWC,GAAW,IAAD,OACtC,GAAgC,IAA5BC,KAAKP,MAAMtB,MAAM8B,QACjBF,EAAU5B,QAAU6B,KAAKP,MAAMtB,MAAM,CACvC,IAAM+B,EAAG,4DAAwDF,KAAKP,MAAMtB,MAAnE,kBAzBA,oCA2BTgC,MAAMD,GACLE,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACV,OAAOD,EAET,MAAME,MAAM,8BAEbH,MAAK,SAAAC,GAAQ,OAAIA,EAASG,UAC1BJ,MAAK,SAAAK,GACJ,IAAMhC,GAAM,IAAIW,MAAOsB,qBACjBhC,GAAO,IAAIU,MAAOC,qBACxB,EAAKO,SAAS,CACZnB,MACAC,OACAC,KAAM,EAAKc,MAAMtB,MACjBS,QAAS6B,EAAKE,IAAI/B,QAClBC,OAAQ4B,EAAKE,IAAI9B,OACjBC,MAAO2B,EAAKG,KAAK9B,KAAW,IAC5BC,SAAU0B,EAAKG,KAAK7B,SACpBC,KAAMyB,EAAKzB,KAAK6B,MAChB5B,OAAO,OAGV6B,OAAM,SAAA7B,GACL,EAAKW,SAAS,CACZX,OAAO,EACPN,KAAM,EAAKc,MAAMtB,c,+BAOvB,OACE,sBAAKoB,UAAU,MAAf,UACE,cAAC,EAAD,CACEpB,MAAO6B,KAAKP,MAAMtB,MAClBE,OAAQ2B,KAAKN,oBAEf,cAAC,EAAD,CAAQlB,QAASwB,KAAKP,e,GAhEZsB,aCHlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.644fa862.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../style/Form.css' \r\n\r\nconst Form = (props) => {\r\n    return ( \r\n        <form>\r\n            <input \r\n                type=\"text\" \r\n                value={props.value} \r\n                onChange={props.change} \r\n                placeholder=\"Twoje miasto\"\r\n            />\r\n        </form>\r\n     );\r\n}\r\n \r\nexport default Form;","import React from 'react';\r\nimport '../style/Result.css';\r\n\r\nconst Result = (props) => {\r\n    \r\n    const {day, time, city, sunrise, sunset, temp, pressure, wind, error} = props.weather;\r\n\r\n    let content = null;\r\n\r\n    if(!error && city) {\r\n        const sunriseTime = new Date(sunrise * 1000).toLocaleTimeString()\r\n        const sunsetTime = new Date(sunset * 1000).toLocaleTimeString()\r\n        content = (\r\n            <div>\r\n                <h1>Wyniki wyszukiwania dla: <em>{city}</em></h1>\r\n                <h2>Dzień: {day}</h2>\r\n                <h2>Godzina: {time}</h2>\r\n                <h2>Temperatura: {temp}&#176;C</h2>\r\n                <h2>Wschód słońca o: {sunriseTime}</h2>\r\n                <h2>Zachód słońca o: {sunsetTime}</h2>\r\n                <h2>Siła wiatru: {wind}m/s</h2>\r\n                <h2>Ciśnienie: {pressure}hPa</h2>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className=\"result\">\r\n            {error ? `Nie mamy w bazie ${city}` : content}\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Result;","import { Component } from 'react';\nimport '../style/App.css';\nimport Form from './Form';\nimport Result from './Result';\n\n//Klucz API\nconst APIKey = 'a230065d081d26a7ff3f72cd68a66644';\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    day: '',\n    time: '',\n    city: '',\n    sunrise: '',\n    sunset: '',\n    temp: '',\n    pressure: '',\n    wind: '',\n    error: false,\n  }\n  \n  handleInputChange = (e) => {\n    this.setState({\n      value: e.target.value\n    })\n  }\n\n  componentDidUpdate(prevProps, prevState){\n    if (this.state.value.length === 0) return\n    if (prevState.value !== this.state.value){\n      const API = `https://api.openweathermap.org/data/2.5/weather?q=${this.state.value}&appid=${APIKey}`;\n\n      fetch(API)\n      .then(response => {\n        if(response.ok){\n          return response\n        }\n        throw Error(\"Nie udało się\")\n      })\n      .then(response => response.json())\n      .then(data => {\n        const day = new Date().toLocaleDateString()\n        const time = new Date().toLocaleTimeString()\n        this.setState({\n          day,\n          time,\n          city: this.state.value,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          temp: (data.main.temp - 273,15),\n          pressure: data.main.pressure,\n          wind: data.wind.speed,\n          error: false,\n        })\n      })\n      .catch(error => {\n        this.setState({\n          error: true,\n          city: this.state.value,\n        })\n      })\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Form \n          value={this.state.value} \n          change={this.handleInputChange} \n        />\n        <Result weather={this.state} />\n      </div>\n    );\n  }\n}\n  \n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style/index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}